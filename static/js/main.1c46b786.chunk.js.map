{"version":3,"sources":["components/TrendingCrypto/TrendingCryptoBody.js","utils/API.js","components/SingleCrypto/SingleCryptoBody.js","components/SearchCrypto/ShowList.js","components/TrendingCrypto/FindTrending.js","pages/TrendingCrypto.js","components/Navbar/NavbarElements.js","components/Navbar/Navbar.js","utils/data.js","components/SelectButton.js","components/SingleCrypto/CryptoChart.js","pages/SingleCrypto.js","components/Pagination.js","components/AllCryptos/AllCryptosBody.js","utils/Paginate.js","pages/AllCryptos.js","components/FilterCryptos/FilterCryptosBody.js","pages/FilterCryptos.js","App.js","reportWebVitals.js","index.js"],"names":["TrendingCryptoBody","props","className","trendingList","coins","map","coin","to","pathname","state","item","id","src","thumb","symbol","toUpperCase","name","searchCryptoList","cryptoPageNum","axios","get","getChart","days","currency","SingleCryptoBody","useState","isLoading","setLoading","singleCrypto","setSingleCrypto","useEffect","crypto","then","items","console","log","data","type","color","height","width","timeout","image","large","scope","market_cap_rank","market_data","total_supply","current_price","usd","market_cap","total_volume","low_24h","price_change_24h_in_currency","price_change_percentage_24h_in_currency","description","en","ShowList","filteredList","alt","market_cap_change_percentage_24h","toFixed","price_change_percentage_24h","FindTrending","cryptos","setCryptos","loading","setError","trendingCryptoList","a","response","status","cryptosLength","Object","keys","length","TrendingCrypto","location","Nav","styled","nav","NavLink","Link","Bars","FaBars","NavMenu","div","NavBtn","NavBtnLink","Navbar","chartDays","label","value","SelectButton","children","selected","onClick","classes","makeStyles","selectbutton","border","borderRadius","padding","paddingLeft","paddingRight","fontFamily","cursor","backgroundColor","fontWeight","useStyles","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","CryptoChart","chartData","setChartData","setDays","theme","container","display","flexDirection","alignItems","justifyContent","marginTop","breakpoints","down","paddingTop","fetchChartData","prices","error","labels","date","Date","time","getHours","getMinutes","toLocaleDateString","datasets","borderColor","options","elements","point","radius","style","day","CircularProgress","size","thickness","SingleCryptoDetail","Pagination","itemsCount","pageSize","currentPage","onPageChange","pageNums","activeBtnColor","setActiveBtnColor","pageNumLimit","maxPageNumLimit","setmaxPageNumLimit","minPageNumLimit","setminPageNumLimit","i","Math","ceil","push","changeBtnColor","index","disabled","number","AllCryptosBody","allCryptos","setAllCryptos","setCryptoPageNum","setCurrentPage","getData","cryptoPaginate","pageNumber","startIndex","_","slice","take","Paginate","page","AllCryptoList","FilterCryptosBody","searchInput","setSearchInput","filteredListAll","filter","toLowerCase","includes","icon","faSearch","onChange","e","target","placeholder","FilterCryptoList","inputValue","App","exact","path","component","SingleCrypto","AllCryptos","FilterCryptos","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c46b786.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../../styles/trendingCrypto.css\";\nimport { Link } from \"react-router-dom\";\n\nconst TrendingCryptoBody = (props) => {\n  return (\n    <div className=\"container-trending\">\n      <h1>Top 7 Trending Cryptos</h1>\n\n      <div className=\"card-section\">\n        {props.trendingList.coins.map((coin) => (\n          <div key={coin.item.id} className=\"show-card\">\n            <Link\n              to={{\n                pathname: \"/singleCrypto\",\n                state: [coin.item.id],\n              }}\n            >\n              <img src={coin.item.thumb}></img>\n            </Link>\n\n            <div>{coin.item.symbol.toUpperCase()}</div>\n            <div>{coin.item.name.toUpperCase()}</div>\n            <Link\n              to={{\n                pathname: \"/singleCrypto\",\n                state: [coin.item.id],\n              }}\n            >\n              <button className=\"btn-trending\">VIEW</button>\n            </Link>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default TrendingCryptoBody;\n","import axios from \"axios\";\n\nexport const searchCryptoList = (cryptoPageNum) => {\n  return axios.get(\n    `https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=${cryptoPageNum}&sparkline=false`\n  );\n};\n\nexport const filterCryptoList = (cryptoPageNum) => {\n  return axios.get(\n    `https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=250&page=${cryptoPageNum}&sparkline=false`\n  );\n};\n\nexport const searchTrendingList = () => {\n  return axios.get(`https://api.coingecko.com/api/v3/search/trending`);\n};\n\nexport const getChart = (id, days = 365, currency) => {\n  return axios.get(\n    `https://api.coingecko.com/api/v3/coins/${id}/market_chart?vs_currency=${currency}&days=${days}`\n  );\n};\n\nexport const getSingleCrypto = (id) => {\n  return axios.get(`https://api.coingecko.com/api/v3/coins/${id}`);\n};\n\n/* export const HistoricalChart = (id, days = 365, currency) =>\n  `https://api.coingecko.com/api/v3/coins/${id}/market_chart?vs_currency=${currency}&days=${days}`; */\n","import React, { useState, useEffect } from \"react\";\nimport { getDatasetAtEvent } from \"react-chartjs-2\";\nimport { getSingleCrypto } from \"../../utils/API\";\nimport \"../../styles/singleCrypto.css\";\nimport Loader from \"react-loader-spinner\";\n\nconst SingleCryptoBody = (props) => {\n  const [isLoading, setLoading] = useState(true);\n\n  const [singleCrypto, setSingleCrypto] = useState();\n  useEffect(() => {\n    getSingleCrypto(props.crypto).then((items) => {\n      console.log(\"Line 38 items data is --->\", items.data);\n      console.log(\"Assigning the value for setSingleCrypto\");\n      setSingleCrypto(items.data);\n\n      setLoading(false);\n    });\n  }, []);\n\n  if (isLoading) {\n    return (\n      <div className=\"show-loader\">\n        <Loader\n          type=\"Puff\"\n          color=\"#00BFFF\"\n          height={100}\n          width={100}\n          timeout={3000} //3 secs\n        />\n      </div>\n    );\n  }\n\n  console.log(\"Single Crypto is :---\", singleCrypto);\n\n  return (\n    <div>\n      {isLoading ? (\n        isLoading\n      ) : (\n        <div className=\"main-info-container\">\n          <div className=\" title-crypto-container\">\n            <div className=\"title-info\">\n              {/* <img src={props.crypto.large}></img> */}\n              <img src={singleCrypto.image.large}></img>\n\n              {/* <span className=\"title\">{props.crypto.name}</span> */}\n              <span className=\"title\">{singleCrypto.name}</span>\n            </div>\n          </div>\n          <div className=\"info-container\">\n            <div className=\"single-crypto-container crypto-table\">\n              <table>\n                <tbody>\n                  <tr className=\"table-row\">\n                    <th scope=\"row\">Market Rank</th>\n                    <td>{singleCrypto.market_cap_rank}</td>\n                  </tr>\n                  <tr className=\"table-row\">\n                    <th scope=\"row\">Supply</th>\n                    <td>{singleCrypto.market_data.total_supply}</td>\n                  </tr>\n                  <tr className=\"table-row\">\n                    <th scope=\"row\">Current Price</th>\n                    <td>{singleCrypto.market_data.current_price.usd}</td>\n                  </tr>\n                  <tr className=\"table-row\">\n                    <th scope=\"row\">Market Cap</th>\n                    <td>{singleCrypto.market_data.market_cap.usd}</td>\n                  </tr>\n                  <tr className=\"table-row\">\n                    <th scope=\"row\">Volume</th>\n                    <td> {singleCrypto.market_data.total_volume.usd}</td>\n                  </tr>\n                  <tr className=\"table-row\">\n                    <th scope=\"row\">High(24h)</th>\n                    <td>{singleCrypto.market_data.total_volume.usd}</td>\n                  </tr>\n                  <tr className=\"table-row\">\n                    <th scope=\"row\">Low(24h)</th>\n                    <td> {singleCrypto.market_data.low_24h.usd}</td>\n                  </tr>\n                  <tr className=\"table-row\">\n                    <th scope=\"row\">Price Change(24h)</th>\n                    <td>\n                      $\n                      {\n                        singleCrypto.market_data.price_change_24h_in_currency\n                          .usd\n                      }{\" \"}\n                      (%:{\" \"}\n                      {\n                        singleCrypto.market_data\n                          .price_change_percentage_24h_in_currency.usd\n                      }\n                      )\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n\n            <div className=\"single-crypto-container desc\">\n              {singleCrypto.description.en}{\" \"}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\nexport default SingleCryptoBody;\n","import React from \"react\";\nimport \"../../styles/showList.css\";\nimport SingleCryptoBody from \"../SingleCrypto/SingleCryptoBody\";\nimport { Link } from \"react-router-dom\";\n\nconst ShowList = (props) => {\n  return (\n    <div className=\"crypto-container\">\n      <div className=\"crypto-row first\">\n        <h4 className=\"first-col\">Name</h4>\n        <h4>Change(24hr)</h4>\n        <h4>Price</h4>\n        <h4>Change%</h4>\n        <h4>Volume</h4>\n        <h4 className=\"btn-buy-title\">VIEW</h4>\n      </div>\n      {props.filteredList.map((crypto) => (\n        <div className=\"crypto-row\" key={crypto.id}>\n          <div className=\"crypto-name\">\n            <div className=\"img-section\">\n              <Link\n                to={{\n                  pathname: \"/singleCrypto\",\n                  state: [crypto.id],\n                }}\n                className=\"btn-img\"\n              >\n                <img src={crypto.image} alt=\"image\" />\n              </Link>\n            </div>\n            <div className=\"name-section\">\n              <div className=\"title\">{crypto.name}</div>\n              <div>{crypto.symbol.toUpperCase()}</div>\n            </div>\n          </div>\n          <div className=\"change-percentage\">\n            {crypto.market_cap_change_percentage_24h < 0 ? (\n              <p className=\"red\">\n                {crypto.market_cap_change_percentage_24h.toFixed(2)}\n                <span className=\"down-arrow\">&#x2193;</span>\n              </p>\n            ) : (\n              <p className=\"green\">\n                +\n                {crypto.market_cap_change_percentage_24h\n                  ? crypto.market_cap_change_percentage_24h.toFixed(2)\n                  : \"\"}\n                <span className=\"up-arrow\">&#x2191;</span>\n              </p>\n            )}\n          </div>\n          <div className=\"current-price\">${crypto.current_price}</div>\n          <div className=\"volume\">{crypto.price_change_percentage_24h}</div>\n          <div className=\"volume\">{crypto.total_volume}</div>\n          <Link\n            to={{\n              pathname: \"/singleCrypto\",\n              state: [crypto.id],\n            }}\n            className=\"btn-img\"\n          >\n            <button className=\"btn-buy\">\n              VIEW {crypto.symbol.toUpperCase()}\n            </button>\n          </Link>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ShowList;\n","import React, { useEffect, useState } from \"react\";\nimport ShowList from \"../SearchCrypto/ShowList\";\nimport axios from \"axios\";\nimport TrendingCryptoBody from \"./TrendingCryptoBody\";\nimport { searchTrendingList } from \"../../utils/API\";\nimport \"../../styles/trendingCrypto.css\";\n\nconst FindTrending = () => {\n  //const [trendingCryptoList, setTrendingCryptoList] = useState([]);\n  const [cryptos, setCryptos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  const hideLoader = () => {\n    setLoading(false);\n  };\n\n  const showLoader = () => {\n    setLoading(true);\n  };\n\n  const trendingCryptoList = async () => {\n    showLoader();\n\n    try {\n      const response = await searchTrendingList();\n      setLoading(false);\n      hideLoader();\n\n      setCryptos(response.data);\n\n      if (response.status !== 200) {\n        setError(true);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const cryptosLength = Object.keys(cryptos).length;\n  useEffect(() => {\n    trendingCryptoList();\n  }, []);\n  return (\n    <div className=\"container-find-trending\">\n      {loading || !cryptosLength ? (\n        <div>loading</div>\n      ) : (\n        <div>\n          <TrendingCryptoBody\n            loading={loading}\n            setLoading={setLoading}\n            trendingList={cryptos}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FindTrending;\n","import React from \"react\";\nimport TrendingCryptoBody from \"../components/TrendingCrypto/TrendingCryptoBody\";\nimport FindTrending from \"../components/TrendingCrypto/FindTrending\";\n\nconst TrendingCrypto = (props) => {\n  console.log(\"props from the trending page are\", props);\n  return (\n    <div>\n      <FindTrending coin={props.location} />\n    </div>\n  );\n};\n\nexport default TrendingCrypto;\n","import { FaBars } from \"react-icons/fa\";\n\nimport { NavLink as Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const Nav = styled.nav`\n  background: #0096ff;\n  height: 70px;\n  display: flex;\n  justify-content: space-between;\n  padding: 0.1rem calc((100vw - 1000px) / 2);\n  z-index: 12;\n`;\n\nexport const NavLink = styled(Link)`\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  padding: 0 1rem;\n  height: 100%;\n  font-size: 20px;\n  cursor: pointer;\n  &.active {\n    color: #bea5ae;\n    background-color: #0096ff;\n  }\n`;\n\nexport const Bars = styled(FaBars)`\n  display: none;\n  color: #808080;\n  @media screen and (max-width: 768px) {\n    display: block;\n    position: absolute;\n    top: 0;\n    right: 0;\n    transform: translate(-100%, 75%);\n    font-size: 1.8rem;\n    cursor: pointer;\n  }\n`;\n\nexport const NavMenu = styled.div`\n  display: flex;\n  align-items: center;\n  margin-right: -24px;\n\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const NavBtn = styled.nav`\n  display: flex;\n  align-items: center;\n  margin-right: 24px;\n\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const NavBtnLink = styled(Link)`\n  border-radius: 4px;\n  background-color: #d6d8da;\n  padding: 10px 22px;\n  color: #000000;\n  outline: none;\n  border: none;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  text-decoration: none;\n\n  margin-left: 24px;\n  &:hover {\n    transition: all 0.2s ease-in-out;\n    background: #fff;\n    color: #808080;\n  }\n`;\n","import React, { useState } from \"react\";\nimport {\n  Nav,\n  NavLink,\n  Bars,\n  NavMenu,\n  NavBtn,\n  NavBtnLink,\n} from \"./NavbarElements\";\n\nconst Navbar = () => {\n  return (\n    <>\n      <Nav>\n        <Bars />\n\n        <NavMenu>\n          <NavLink to=\"/trendingCrypto\">TRENDING</NavLink>\n\n          <NavLink to=\"/\">SEARCH</NavLink>\n          <NavLink to=\"/allCryptos\">ALL CRYPTOS</NavLink>\n        </NavMenu>\n        <NavBtn>\n          <NavBtnLink to=\"/signin\">Sign In</NavBtnLink>\n        </NavBtn>\n      </Nav>\n    </>\n  );\n};\n\nexport default Navbar;\n","export const chartDays = [\n  {\n    label: \"24 Hours\",\n    value: 1,\n  },\n  {\n    label: \"30 Days\",\n    value: 30,\n  },\n  {\n    label: \"3 Months\",\n    value: 90,\n  },\n  {\n    label: \"1 Year\",\n    value: 365,\n  },\n];\n","import { makeStyles } from \"@material-ui/core\";\n\nconst SelectButton = ({ children, selected, onClick }) => {\n  const useStyles = makeStyles({\n    selectbutton: {\n      border: \"2px solid #0096ff\",\n      borderRadius: 5,\n      padding: 10,\n      paddingLeft: 20,\n      paddingRight: 20,\n      fontFamily: \"Montserrat\",\n      cursor: \"pointer\",\n      backgroundColor: selected ? \"#ffb480\" : \"\",\n      color: selected ? \"black\" : \"\",\n      fontWeight: selected ? 700 : 500,\n      \"&:hover\": {\n        backgroundColor: \"#ffb480\",\n        color: \"black\",\n      },\n      width: \"22%\",\n      //   margin: 5,\n    },\n  });\n\n  const classes = useStyles();\n\n  return (\n    <span onClick={onClick} className={classes.selectbutton}>\n      {children}\n    </span>\n  );\n};\n\nexport default SelectButton;\n","import axios from \"axios\";\n//import { CategoryScale } from \"chart.js\";\nimport { useEffect, useState } from \"react\";\nimport { getChart } from \"../../utils/API\";\nimport { Line } from \"react-chartjs-2\";\nimport {\n  CircularProgress,\n  createTheme,\n  makeStyles,\n  ThemeProvider,\n} from \"@material-ui/core\";\nimport { chartDays } from \"../../utils/data\";\nimport SelectButton from \"../SelectButton\";\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { Chart } from \"react-chartjs-2\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst CryptoChart = (props) => {\n  console.log(\"props from crypto chart \", props);\n  const [chartData, setChartData] = useState();\n  const [days, setDays] = useState(1);\n  const currency = \"usd\";\n\n  const useStyles = makeStyles((theme) => ({\n    container: {\n      width: \"75%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      marginTop: 25,\n      padding: 40,\n      [theme.breakpoints.down(\"md\")]: {\n        width: \"100%\",\n        marginTop: 0,\n        padding: 20,\n        paddingTop: 0,\n      },\n    },\n  }));\n\n  const classes = useStyles();\n\n  const fetchChartData = async () => {\n    try {\n      const response = await getChart(props.crypto, days, currency);\n\n      console.log(\"chart data is \", response.data);\n      setChartData(response.data.prices);\n\n      if (response.status !== 200) {\n        throw new console.error(\"Something went wrong!\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  console.log(chartData);\n  useEffect(() => {\n    fetchChartData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [days]);\n  return (\n    <div className={classes.container}>\n      {!chartData ? (\n        <CircularProgress\n          style={{ color: \"#0096ff\" }}\n          size={250}\n          thickness={1}\n        />\n      ) : (\n        <>\n          <Line\n            data={{\n              labels: chartData.map((coin) => {\n                let date = new Date(coin[0]);\n                let time =\n                  date.getHours() > 12\n                    ? `${date.getHours() - 12}:${date.getMinutes()} PM`\n                    : `${date.getHours()}:${date.getMinutes()} AM`;\n                return days === 1 ? time : date.toLocaleDateString();\n              }),\n\n              datasets: [\n                {\n                  data: chartData.map((coin) => coin[1]),\n                  label: `Price ( Past ${days} Days ) in ${currency}`,\n                  borderColor: \"#0096ff\",\n                },\n              ],\n            }}\n            options={{\n              elements: {\n                point: {\n                  radius: 1,\n                },\n              },\n            }}\n          />\n          <div\n            style={{\n              display: \"flex\",\n              marginTop: 20,\n              justifyContent: \"space-around\",\n              width: \"100%\",\n            }}\n          >\n            {chartDays.map((day) => (\n              <SelectButton\n                key={day.value}\n                onClick={() => setDays(day.value)}\n                selected={day.value === days}\n              >\n                {day.label}\n              </SelectButton>\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default CryptoChart;\n","import React from \"react\";\nimport SingleCryptoBody from \"../components/SingleCrypto/SingleCryptoBody.js\";\n\nimport CryptoChart from \"../components/SingleCrypto/CryptoChart.js\";\n\nconst SingleCryptoDetail = (props) => {\n  return (\n    <div>\n      <SingleCryptoBody crypto={props.location.state[0]} />\n      <CryptoChart crypto={props.location.state[0]} />\n    </div>\n  );\n};\n\nexport default SingleCryptoDetail;\n","import React, { useState } from \"react\";\nimport _ from \"lodash\";\nimport { PropTypes } from \"prop-types\";\nimport \"../styles/pagination.css\";\n\nconst Pagination = (props) => {\n  const { itemsCount, pageSize, currentPage, onPageChange } = props;\n\n  const pageNums = [];\n  const [activeBtnColor, setActiveBtnColor] = useState(0);\n  const [pageNumLimit] = useState(5);\n  const [maxPageNumLimit, setmaxPageNumLimit] = useState(5);\n  const [minPageNumLimit, setminPageNumLimit] = useState(0);\n\n  for (let i = 1; i <= Math.ceil(itemsCount / pageSize); i++) {\n    pageNums.push(i);\n  }\n\n  const paginate = (pageNumber) => {\n    onPageChange(pageNumber);\n  };\n\n  const changeBtnColor = (index) => {\n    setActiveBtnColor(index);\n  };\n\n  const nextBtn = () => {\n    onPageChange(currentPage + 1);\n\n    if (currentPage + 1 > maxPageNumLimit) {\n      setmaxPageNumLimit(maxPageNumLimit + pageNumLimit);\n      setminPageNumLimit(minPageNumLimit + pageNumLimit);\n    }\n  };\n\n  const prevBtn = () => {\n    onPageChange(currentPage - 1);\n\n    if ((currentPage - 1) % pageNumLimit === 0) {\n      setmaxPageNumLimit(maxPageNumLimit - pageNumLimit);\n      setminPageNumLimit(minPageNumLimit - pageNumLimit);\n    }\n  };\n\n  return (\n    <div className=\"pagination\">\n      <button\n        className=\"prev-btn\"\n        onClick={() => {\n          prevBtn();\n          changeBtnColor(currentPage - 2);\n        }}\n        disabled={currentPage === pageNums[0] ? true : false}\n      >\n        Prev\n      </button>\n\n      {pageNums.map((number, index) =>\n        number <= maxPageNumLimit && number > minPageNumLimit ? (\n          <button\n            key={index}\n            onClick={() => {\n              paginate(number);\n              changeBtnColor(index);\n            }}\n            className={`page-link ${activeBtnColor === index ? \"active\" : \"\"}`}\n          >\n            {number}\n          </button>\n        ) : null\n      )}\n\n      <button\n        className=\"next-btn\"\n        onClick={() => {\n          nextBtn();\n          changeBtnColor(currentPage);\n        }}\n        disabled={currentPage === pageNums[pageNums.length - 1] ? true : false}\n      >\n        Next\n      </button>\n    </div>\n  );\n\n  Pagination.propTypes = {\n    itemsCount: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired,\n    currentPage: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired,\n  };\n};\n\nexport default Pagination;\n","import React, { useState, useEffect } from \"react\";\nimport { searchCryptoList } from \"../../utils/API\";\nimport ShowList from \"../SearchCrypto/ShowList\";\nimport Loader from \"react-loader-spinner\";\nimport _ from \"lodash\";\nimport Pagination from \"../Pagination\";\nimport { Paginate } from \"../../utils/Paginate\";\nimport \"../../styles/searchCrypto.css\";\n\nconst AllCryptosBody = () => {\n  const [allCryptos, setAllCryptos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [cryptoPageNum, setCryptoPageNum] = useState(1);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(10);\n\n  const hideLoader = () => {\n    setLoading(false);\n  };\n\n  const showLoader = () => {\n    setLoading(true);\n  };\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const cryptosLength = Object.keys(allCryptos).length;\n\n  const getData = async () => {\n    showLoader();\n\n    try {\n      const response = await searchCryptoList(cryptoPageNum);\n      setLoading(false);\n      hideLoader();\n\n      setAllCryptos(response.data);\n\n      if (response.status !== 200) {\n        setError(true);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n    setCryptoPageNum(cryptoPageNum + 1);\n  };\n\n  const cryptoPaginate = Paginate(allCryptos, currentPage, pageSize);\n\n  useEffect(() => {\n    getData();\n  }, []);\n  return (\n    <div>\n      {loading ? (\n        <div className=\"show-loader\">\n          <Loader\n            type=\"Puff\"\n            color=\"#00BFFF\"\n            height={100}\n            width={100}\n            timeout={3000} //3 secs\n          />\n        </div>\n      ) : (\n        <div>\n          <ShowList\n            loading={loading}\n            setLoading={setLoading}\n            filteredList={cryptoPaginate}\n          />\n          <Pagination\n            itemsCount={cryptosLength}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={handlePageChange}\n          />\n        </div>\n      )}\n\n      {cryptoPageNum <= 4 ? (\n        <div className=\"load-next-records\">\n          <button\n            onClick={getData}\n            className=\"btn-new-page\"\n            data-testid=\"next-page\"\n          >\n            <p>\n              {cryptoPageNum === 1 ? (\n                <span>LOAD FROM BEGINNING</span>\n              ) : (\n                <span>LOAD NEXT 100 RECORDS</span>\n              )}\n            </p>\n          </button>\n        </div>\n      ) : (\n        <div>{setCryptoPageNum(1)}</div>\n      )}\n    </div>\n  );\n};\n\nexport default AllCryptosBody;\n","import _ from \"lodash\";\n\nexport const Paginate = (items, pageNumber, pageSize) => {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return _(items).slice(startIndex).take(pageSize).value();\n};\n","import React from \"react\";\nimport AllCryptosBody from \"../components/AllCryptos/AllCryptosBody\";\n\nconst AllCryptoList = () => {\n  return (\n    <div>\n      <AllCryptosBody />\n    </div>\n  );\n};\n\nexport default AllCryptoList;\n","import React, { useState, useEffect } from \"react\";\nimport { filterCryptoList } from \"../../utils/API\";\nimport ShowList from \"../SearchCrypto/ShowList\";\nimport Loader from \"react-loader-spinner\";\nimport _ from \"lodash\";\nimport \"../../styles/filterCryptos.css\";\nimport {\n  faAddressBook,\n  faAngleRight,\n  faSearch,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst FilterCryptosBody = (props) => {\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [cryptos, setCryptos] = useState([]);\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  const hideLoader = () => {\n    setLoading(false);\n  };\n\n  const showLoader = () => {\n    setLoading(true);\n  };\n\n  const getData = async () => {\n    showLoader();\n\n    try {\n      const response = await filterCryptoList(1);\n      setLoading(false);\n      hideLoader();\n\n      setCryptos(response.data);\n\n      if (response.status !== 200) {\n        setError(true);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const filteredListAll = cryptos.filter(\n    (crypto) =>\n      crypto.name.toLowerCase().includes(searchInput.toLowerCase()) ||\n      crypto.symbol.toLowerCase().includes(searchInput.toLowerCase())\n  );\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <div className=\"search-container\">\n        <FontAwesomeIcon icon={faSearch} />\n        <input\n          name=\"searchInput\"\n          value={searchInput}\n          onChange={(e) => setSearchInput(e.target.value)}\n          type=\"text\"\n          size=\"lg\"\n          data-testid=\"input-element\"\n          placeholder=\"Search\"\n          className=\"search-input\"\n        />\n      </div>\n      <div className=\"result-container\">\n        {loading ? (\n          <div className=\"show-loader\">\n            <Loader\n              type=\"Puff\"\n              color=\"#00BFFF\"\n              height={100}\n              width={100}\n              timeout={3000} //3 secs\n            />\n          </div>\n        ) : (\n          <ShowList\n            loading={loading}\n            setLoading={setLoading}\n            filteredList={filteredListAll}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default FilterCryptosBody;\n","import React from \"react\";\nimport FilterCryptosBody from \"../components/FilterCryptos/FilterCryptosBody\";\n\nconst FilterCryptoList = (props) => {\n  return (\n    <div>\n      <FilterCryptosBody inputValue={props.location} />\n    </div>\n  );\n};\n\nexport default FilterCryptoList;\n","import React from \"react\";\nimport axios from \"axios\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport TrendingCrypto from \"./pages/TrendingCrypto\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport SingleCrypto from \"./pages/SingleCrypto\";\nimport AllCryptos from \"./pages/AllCryptos\";\nimport FilterCryptos from \"./pages/FilterCryptos\";\n\nfunction App() {\n  return (\n    <Router>\n      <>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/trendingCrypto\" component={TrendingCrypto} />\n          <Route exact path=\"/singleCrypto\" component={SingleCrypto} />\n          <Route exact path=\"/allCryptos\" component={AllCryptos} />\n          <Route exact path=\"/\" component={FilterCryptos} />\n          <Route render={() => <h1 className=\"display-2\">Wrong page!</h1>} />\n        </Switch>\n      </>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}